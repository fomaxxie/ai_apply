<div class="container">
  <div class="letter-header">
    <button><%= link_to '<i class="fas fa-arrow-left"></i>'.html_safe, dashboard_path, class:"btn-login" %></button>
    <h2><%= @letter.profile.desired_position %> - <%= @letter.company_name %></h2>
  </div>
  <div class="letter-container" id="data-clipboard-text">
    <p style = "font-weight: bold;"> <%= @letter.profile.full_name %></p>
    <p><%= @letter.profile.email %><br>
    <%= @letter.profile.phone_number.present? ? "#{@letter.profile.phone_number}<br>".html_safe : "" %>
    <%= @letter.profile.location.present? ? "Based in #{@letter.profile.location}<br>".html_safe : "" %></p>

    <p><%= @letter.profile.website.present? ? "#{@letter.profile.website}<br>".html_safe : "" %>
    <%= @letter.profile.linkedin.present? ? "#{@letter.profile.linkedin}<br>".html_safe : "" %>
    <%= @letter.profile.twitter.present? ? "#{@letter.profile.twitter}<br>".html_safe : "" %>
    <%= @letter.profile.instagram.present? ? "#{@letter.profile.instagram}<br>".html_safe : "" %>
    <%= @letter.profile.github.present? ? "#{@letter.profile.github}<br>".html_safe : "" %></p>
    <br>
    <p><%= simple_format(@letter.letter_output) %></p>
  </div>

  <div class="letter-buttons">
    <button><%= link_to 'Save Letter', dashboard_path, class:"btn-signup" %></button>
    <button><%= link_to 'Regenerate Letter', edit_letter_path(@letter), class:"btn-login" %></button>
    <button><%= link_to "Delete", letter_path(@letter), class:"btn-login", data: { turbo_method: :delete, turbo_confirm: "Are you sure?" } %></button>
    <button id="copy-button" class="btn-login">Copy to Clipboard</button>
    <button id="download-pdf" class="btn-login">Download as PDF</button>
  </div>
</div>

<!--Copy to clipboard JS script-->

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const copyButton = document.getElementById('copy-button');
    const contentToCopy = document.getElementById('data-clipboard-text');

    copyButton.addEventListener('click', function () {
      const range = document.createRange();
      range.selectNode(contentToCopy);
      window.getSelection().removeAllRanges(); // Clear current selection
      window.getSelection().addRange(range); // Select the text content

      try {
        const successful = document.execCommand('copy');
        if (successful) {
          alert('Text copied to clipboard!');
        } else {
          alert('Failed to copy text.');
        }
      } catch (err) {
        alert('Oops, unable to copy');
      }

      window.getSelection().removeAllRanges(); // Remove selection after copy
    });
  });
</script>

<!--Download PDF-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.6/purify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const downloadButton = document.getElementById('download-pdf');
    const contentToDownload = document.getElementById('data-clipboard-text');

    downloadButton.addEventListener('click', function () {
      const jsPDF = window.jspdf.jsPDF;
      const doc = new jsPDF();

      doc.html(contentToDownload, {
        html2canvas: {
        scale: 0.1, // Experiment with scaling
        letterRendering: true,
        },
        callback: function (doc) {
          doc.save('cover_letter.pdf');
        },
        x: 0,
        y: 0,
        windowWidth: contentToDownload.scrollWidth, // Adjust the rendering width if needed
      });
    });
  });
</script>
