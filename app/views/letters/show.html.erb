<div class="container">
  <div class="letter-header">
    <button><%= link_to '<i class="fas fa-arrow-left"></i>'.html_safe, dashboard_path, class:"btn-login" %></button>
    <h2><%= @letter.profile.desired_position %> - <%= @letter.company_name %></h2>
  </div>
  <div class="letter-container" id="data-clipboard-text">
    <p style = "font-weight: bold;"> <%= @letter.profile.full_name %></p>
    <p><%= @letter.profile.email %><br>
    <%= @letter.profile.phone_number.present? ? "#{@letter.profile.phone_number}<br>".html_safe : "" %>
    <%= @letter.profile.location.present? ? "Based in #{@letter.profile.location}<br>".html_safe : "" %></p>

    <p><%= @letter.profile.website.present? ? "#{@letter.profile.website}<br>".html_safe : "" %>
    <%= @letter.profile.linkedin.present? ? "#{@letter.profile.linkedin}<br>".html_safe : "" %>
    <%= @letter.profile.twitter.present? ? "#{@letter.profile.twitter}<br>".html_safe : "" %>
    <%= @letter.profile.instagram.present? ? "#{@letter.profile.instagram}<br>".html_safe : "" %>
    <%= @letter.profile.github.present? ? "#{@letter.profile.github}<br>".html_safe : "" %></p>
    <br>
    <p><%= simple_format(@letter.letter_output) %></p>
  </div>

  <div class="letter-buttons">
    <button><%= link_to 'Save Letter', dashboard_path, class:"btn-signup" %></button>
    <button><%= link_to 'Regenerate Letter', edit_letter_path(@letter), class:"btn-login" %></button>
    <button><%= link_to "Delete", letter_path(@letter), class:"btn-login", data: { turbo_method: :delete, turbo_confirm: "Are you sure?" } %></button>
    <button id="copy-button" class="btn-login">Copy to Clipboard</button>
    <button id="download-pdf" class="btn-login">Download as PDF</button>
  </div>
</div>

<!-- Include jsPDF Library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>

<script>
// Global handler functions
function handleCopyClick() {
  const contentToCopy = document.getElementById('data-clipboard-text');
  if (!contentToCopy) return;

  const range = document.createRange();
  range.selectNode(contentToCopy);
  window.getSelection().removeAllRanges();
  window.getSelection().addRange(range);

  try {
    const successful = document.execCommand('copy');
    if (successful) {
      alert('Text copied to clipboard!');
    } else {
      alert('Failed to copy text.');
    }
  } catch (err) {
    alert('Oops, unable to copy');
  }

  window.getSelection().removeAllRanges();
}

function handleDownloadClick() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  const contentToDownload = document.getElementById('data-clipboard-text');
  if (!contentToDownload) return;

  const letterContent = contentToDownload.innerText || '';

  doc.setFont("Helvetica", "normal");
  doc.setFontSize(9);
  let marginTop = 18;
  let marginSides = 16;
  let lineHeight = 5;
  let currentY = marginTop;

  if (letterContent) {
    const splitLetter = doc.splitTextToSize(letterContent, 180);

    splitLetter.forEach(line => {
      if (currentY + lineHeight > doc.internal.pageSize.height - marginSides) {
        doc.addPage();
        currentY = marginTop;
      }
      doc.text(line, marginSides, currentY);
      currentY += lineHeight;
    });
  }

  doc.save('cover_letter.pdf');
}

document.addEventListener('turbo:load', function () {
  const copyButton = document.getElementById('copy-button');
  const downloadButton = document.getElementById('download-pdf');

  if (copyButton && !copyButton.dataset.listenerAttached) {
    copyButton.addEventListener('click', handleCopyClick);
    copyButton.dataset.listenerAttached = 'true';
  }

  if (downloadButton && !downloadButton.dataset.listenerAttached) {
    downloadButton.addEventListener('click', handleDownloadClick);
    downloadButton.dataset.listenerAttached = 'true';
  }
});
</script>
